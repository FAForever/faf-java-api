faf-api:
  version: #faf-api.version#
  avatar:
    max-size-bytes: ${AVATAR_MAX_SIZE_BYTES:4096}
    image-width: ${AVATAR_IMAGE_WIDTH:40}
    image-height: ${AVATAR_IMAGE_HEIGHT:20}
  clan:
    invite-link-expire-duration-minutes: ${CLAN_INVITE_LINK_EXPIRE_DURATION_MINUTES:604800}
  challonge:
    key: ${CHALLONGE_KEY:}
  database:
    schema-version: ${DATABASE_SCHEMA_VERSION:119}
  mautic:
    base-url: ${MAUTIC_BASE_URL:false}
    client-id: ${MAUTIC_CLIENT_ID:false}
    client-secret: ${MAUTIC_CLIENT_SECRET:false}
    access-token-url: ${MAUTIC_ACCESS_TOKEN_URL:false}
  git-hub:
    access-token: ${GITHUB_ACCESS_TOKEN:false}
    webhook-secret: ${GITHUB_WEBHOOK_SECRET:false}
  anope:
    database-name: ${ANOPE_DATABASE_NAME:faf-anope}
  rating:
    default-mean: 1500
    default-deviation: 500
  nodebb:
    base-url: ${NODEBB_BASE_URL:false}
    admin-user-id: ${NODEBB_ADMIN_USERID:1}
    master-token: ${NODEBB_MASTER_TOKEN:false}

spring:
  application:
    name: FAF Java API
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    configuration:
      connection-test-query: SELECT 1 FROM DUAL
      minimum-idle: 2
      maximum-pool-size: 12
  league-datasource:
    type: com.zaxxer.hikari.HikariDataSource
    configuration:
      connection-test-query: SELECT 1 FROM DUAL
      minimum-idle: 2
      maximum-pool-size: 12
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        dialect: org.hibernate.dialect.MySQL5Dialect
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  profiles:
    active: ${API_PROFILE:dev}
  servlet:
    multipart:
      max-file-size: 350MB
      max-request-size: 350MB
      file-size-threshold: 5MB
  mail:
    host: ${MAIL_HOST:false}
    port: ${MAIL_PORT:false}
    username: ${MAIL_USERNAME:false}
    password: ${MAIL_PASSWORD:false}
  data:
    jpa:
      repositories:
        bootstrap-mode: DEFAULT

server:
  # Mind that this is configured in the docker compose file as well (that is, in the gradle script that generates it)
  port: ${API_PORT:8010}
  servlet:
    context-path: ${CONTEXT_PATH:/}
    encoding:
      charset: utf-8
      enabled: true
      force: true
  jetty:
    max-http-form-post-size: 367001600
  forward-headers-strategy: native

management:
  server:
    port: ${MANAGEMENT_PORT:8011}
    address: ${MANAGEMENT_ADDRESS:}
  endpoints:
    web:
      exposure:
        include: '*'
logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%36.36X{requestId:- no request context}]){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    com.faforever: ${LOG_LEVEL:info}
